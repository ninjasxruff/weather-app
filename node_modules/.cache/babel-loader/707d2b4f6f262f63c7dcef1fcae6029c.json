{"ast":null,"code":"var _jsxFileName = \"/home/rrk/Web dev/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport './tailwind.css';\nimport 'weather-icons/css/weather-icons.css';\nimport Navbar from './app_components/navbar';\nimport Weather from './app_components/weather.component';\nimport Dayte from './app_components/date';\nimport Loc from './app_components/location';\nimport Weathers from './app_components/weathers.component';\nimport Context from './app_components/contextual.search'; //https://api.openweathermap.org/data/2.5/weather?q=${city_name}&appid=${api_key} - 1 day\n//https://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon}&exclude={part}&appid={YOUR API KEY}- 7 days \n\nconst api_key = 'aef5f0f7ef1f482eb40aeaa93c360e1e';\nconst lat = 51.5074;\nconst lon = 0.1278;\nlet ikon = [];\nlet zz = 1; //const cnt=7\n\n/*componentDidMount() \n{\n  if (\"geolocation\" in navigator) {\n    console.log(\"Available\");\n  } else {\n    console.log(\"Not Available\");\n  }\n}*/\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city_name: undefined,\n      country_name: undefined,\n      long: undefined,\n      lat: undefined,\n      tempc: [undefined, undefined, undefined, undefined, undefined, undefined, undefined],\n      icon: [undefined, undefined, undefined, undefined, undefined, undefined, undefined],\n      valid: undefined,\n      error: false\n    }; //this.getWeather() not needed as the search bar will call for this \n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"position\");\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(\"position\");\n    }, function (error) {\n      console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n    });\n    getWeatherIcon(icons, rangeId, i);\n    {\n      switch (true) {\n        case rangeId >= 200 && rangeId <= 232:\n          ikon[i] = this.weatherIcon.Thunderstorm;\n          break;\n\n        case rangeId >= 300 && rangeId <= 321:\n          ikon[i] = this.weatherIcon.Drizzle;\n          break;\n\n        case rangeId >= 400 && rangeId <= 531:\n          ikon[i] = this.weatherIcon.Rain;\n          break;\n\n        case rangeId >= 500 && rangeId <= 622:\n          ikon[i] = this.weatherIcon.Snow;\n          break;\n\n        case rangeId >= 600 && rangeId <= 781:\n          ikon[i] = this.weatherIcon.Atmosphere;\n          break;\n\n        case rangeId === 800:\n          ikon[i] = this.weatherIcon.Clear;\n          break;\n\n        case rangeId >= 800 && rangeId <= 804:\n          ikon[i] = this.weatherIcon.Clouds;\n          break;\n      }\n      /*console.log(ikon)\n      console.log(this.state.icon)*/\n\n\n      if (i <= 6) this.setState({\n        icon: ikon\n      });\n    }\n\n    tempcon = t => {\n      for (let i = 0; i < 7; i++) {\n        t[i] = Math.floor(t[i] - 273.15);\n      }\n\n      return t;\n    };\n\n    getWeather = async e => {\n      e.preventDefault();\n      const city_name = e.target.elements.city.value;\n\n      if (city_name) {\n        const api_call1 = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city_name}&appid=${api_key}`);\n        /* fetch('https://no-such-server.blabla') // rejects\n        .then(response => response.json())\n        .catch(err => alert(err)) // TypeError: failed to fetch (the text may vary) */\n\n        const response1 = await api_call1.json();\n        console.log(response1);\n        this.setState({\n          city_name: response1.name,\n          country_name: response1.sys.country,\n          lat: response1.coord.lat,\n          long: response1.coord.lon,\n          valid: 1\n        });\n        console.log(this.state.lat);\n        const api_call2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.long}&exclude=${'hourly,current'}&appid=${api_key}`);\n        const response2 = await api_call2.json();\n        console.log(response2);\n        let temperatures = [];\n\n        for (let i = 0; i < 7; i++) {\n          temperatures.push(response2.daily[i].temp.day);\n        }\n\n        this.setState({\n          tempc: this.tempcon(temperatures)\n        });\n\n        for (let i = 0; i < 7; i++) {\n          this.getWeatherIcon(this.weatherIcon, response2.daily[i].weather[0].id, i);\n        }\n        /*   else\n          {\n          this.setState({error: true})\n        }*/\n\n      }\n    }; // this.getWeatherIcon(this.getWeather,response.weather[0].id)\n\n\n    render();\n    {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        loadWeather: this.getWeather,\n        error: this.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"w-full h-screen flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-green-900 w-1/4 h-screen \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex-col h-screen flex justify-center index-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Weathers, {\n        tempc: this.state.tempc[1],\n        d: zz,\n        weatherIcon: this.state.icon[1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Weathers, {\n        tempc: this.state.tempc[2],\n        d: zz + 1,\n        weatherIcon: this.state.icon[2],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Weathers, {\n        tempc: this.state.tempc[3],\n        d: zz + 2,\n        weatherIcon: this.state.icon[3],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Weathers, {\n        tempc: this.state.tempc[4],\n        d: zz + 3,\n        weatherIcon: this.state.icon[4],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Weathers, {\n        tempc: this.state.tempc[5],\n        d: zz + 4,\n        weatherIcon: this.state.icon[5],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Weathers, {\n        tempc: this.state.tempc[6],\n        d: zz + 5,\n        weatherIcon: this.state.icon[6],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex justify-center flex flex items-center bg-blue-900 w-2/4 h-screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"justify-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Weather, {\n        tempc: this.state.tempc[0],\n        weatherIcon: this.state.icon[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Dayte, {\n        validity: this.state.valid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Loc, {\n        city: this.state.city_name,\n        country: this.state.country_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex justify-center flex items-center bg-red-900 w-1/4 h-screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Context, {\n        query: this.state.country_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 92\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rrk/Web dev/weather-app/src/App.js"],"names":["React","Component","render","axios","Navbar","Weather","Dayte","Loc","Weathers","Context","api_key","lat","lon","ikon","zz","App","constructor","state","city_name","undefined","country_name","long","tempc","icon","valid","error","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","componentDidMount","console","log","navigator","geolocation","getCurrentPosition","position","code","message","getWeatherIcon","icons","rangeId","i","setState","tempcon","t","Math","floor","getWeather","e","preventDefault","target","elements","city","value","api_call1","fetch","response1","json","name","sys","country","coord","api_call2","response2","temperatures","push","daily","temp","day","weather","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {render} from 'react-dom'\nimport axios from 'axios';\nimport './tailwind.css';\nimport 'weather-icons/css/weather-icons.css';\nimport Navbar from './app_components/navbar';\nimport Weather from './app_components/weather.component';\nimport Dayte from './app_components/date';\nimport Loc from './app_components/location';\nimport Weathers from './app_components/weathers.component';\nimport Context from './app_components/contextual.search';\n//https://api.openweathermap.org/data/2.5/weather?q=${city_name}&appid=${api_key} - 1 day\n//https://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon}&exclude={part}&appid={YOUR API KEY}- 7 days \n\nconst api_key='aef5f0f7ef1f482eb40aeaa93c360e1e'\nconst lat=51.5074\nconst lon=0.1278\nlet ikon = []\nlet zz = 1\n//const cnt=7\n/*componentDidMount() \n{\n  if (\"geolocation\" in navigator) {\n    console.log(\"Available\");\n  } else {\n    console.log(\"Not Available\");\n  }\n}*/\nclass App extends React.Component \n{\n  constructor()\n  {\n    super();\n    this.state = \n    {\n      city_name: undefined,\n      country_name: undefined,\n      long: undefined,\n      lat: undefined,\n      tempc: [undefined, undefined, undefined, undefined, undefined, undefined, undefined],\n      icon: [undefined, undefined, undefined, undefined, undefined, undefined, undefined],\n      valid: undefined,\n      error: false\n    };\n    //this.getWeather() not needed as the search bar will call for this \n    this.weatherIcon = \n    {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear:\"wi-day-sunny\",\n      Clouds:\"wi-day-fog\"\n    }     \n  }\n\n  componentDidMount()\n   {console.log(\"position\");\n    navigator.geolocation.getCurrentPosition(\n      function(position) {\n        console.log(\"position\");\n      },\n      function(error) {\n        console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n      }\n    );\n   \n  getWeatherIcon(icons,rangeId,i)\n    { \n    \n    \n      switch(true)\n      {\n        case (rangeId>=200 && rangeId<=232):\n          ikon[i]=this.weatherIcon.Thunderstorm\n          break\n        case (rangeId>=300 && rangeId<=321):\n          ikon[i]=this.weatherIcon.Drizzle\n          break\n        case (rangeId>=400 && rangeId<=531):\n          ikon[i]=this.weatherIcon.Rain\n          break\n        case (rangeId>=500 && rangeId<=622):\n          ikon[i]=this.weatherIcon.Snow\n          break\n        case (rangeId>=600 && rangeId<=781):\n          ikon[i]=this.weatherIcon.Atmosphere\n          break\n        case (rangeId===800):\n          ikon[i]=this.weatherIcon.Clear\n          break  \n        case (rangeId>=800 && rangeId<=804):\n          ikon[i]=this.weatherIcon.Clouds\n        break\n\n      }\n      /*console.log(ikon)\n      console.log(this.state.icon)*/\n      if(i<=6) this.setState({icon: ikon})\n    }\n\n  tempcon = (t) =>\n  { \n    for(let i=0;i<7;i++)\n    {\n     t[i]=(Math.floor(t[i]-273.15))\n    }\n    return t;\n  \n  }\n\n\n\n  getWeather = async e =>\n  {\n    e.preventDefault()\n    const city_name=e.target.elements.city.value;\n    if(city_name)\n    {\n      const api_call1= await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city_name}&appid=${api_key}`)\n      /* fetch('https://no-such-server.blabla') // rejects\n    .then(response => response.json())\n    .catch(err => alert(err)) // TypeError: failed to fetch (the text may vary) */\n      const response1 = await api_call1.json();\n      console.log(response1)\n      this.setState({\n        city_name:response1.name,\n        country_name: response1.sys.country,\n        lat: response1.coord.lat,\n        long: response1.coord.lon,\n        valid: 1\n      })\n      console.log(this.state.lat)\n\n      const api_call2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.long}&exclude=${'hourly,current'}&appid=${api_key}`)\n\n      const response2 = await api_call2.json();\n      console.log(response2)\n      let temperatures = []\n\n      for(let i=0;i<7;i++)\n      {\n        temperatures.push(response2.daily[i].temp.day);\n      }\n      this.setState(\n      {  \n        tempc: this.tempcon(temperatures) \n      })\n\n      for(let i=0;i<7;i++)\n      {  \n        this.getWeatherIcon(this.weatherIcon,response2.daily[i].weather[0].id,i) \n      }\n\n    \n  /*   else\n    {\n    this.setState({error: true})\n  }*/\n  \n    }\n  }\n\n  \n  \n\n // this.getWeatherIcon(this.getWeather,response.weather[0].id)\n  \n  render()\n  {\n    return (\n      <div className=\"App\">\n        <Navbar loadWeather={this.getWeather} error={this.error} />\n        <div className='w-full h-screen flex'>\n          <div className='bg-green-900 w-1/4 h-screen '>\n            <div className='flex-col h-screen flex justify-center index-center'>\n              <Weathers tempc={this.state.tempc[1]} d = {zz} weatherIcon={this.state.icon[1]}/>\n              <Weathers tempc={this.state.tempc[2]} d = {zz+1} weatherIcon={this.state.icon[2]}/>\n              <Weathers tempc={this.state.tempc[3]} d = {zz+2} weatherIcon={this.state.icon[3]}/>\n              <Weathers tempc={this.state.tempc[4]} d = {zz+3} weatherIcon={this.state.icon[4]}/>\n              <Weathers tempc={this.state.tempc[5]} d = {zz+4} weatherIcon={this.state.icon[5]}/>\n              <Weathers tempc={this.state.tempc[6]} d = {zz+5} weatherIcon={this.state.icon[6]}/>\n             </div>\n          </div>\n          <div className='flex justify-center flex flex items-center bg-blue-900 w-2/4 h-screen'>\n            <div className='justify-end' >\n            <Weather tempc={this.state.tempc[0]} weatherIcon={this.state.icon[0]}/>\n            <Dayte validity={this.state.valid}/>\n            <Loc city={this.state.city_name} country={this.state.country_name}/>\n            </div>\n          </div>  \n          <div className='flex justify-center flex items-center bg-red-900 w-1/4 h-screen'><Context query={this.state.country_name}/></div>\n          \n        </div>\n      </div>\n      );\n  }\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}